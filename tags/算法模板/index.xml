<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法模板 on Doごみ箱🪄</title><link>http://dodolalorc.cn/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/</link><description>Recent content in 算法模板 on Doごみ箱🪄</description><generator>Hugo</generator><language>zh-CN</language><managingEditor>chenflora124@gmail.com (DODOLA)</managingEditor><webMaster>chenflora124@gmail.com (DODOLA)</webMaster><copyright>dodola</copyright><lastBuildDate>Sat, 26 Apr 2025 04:49:26 +0000</lastBuildDate><atom:link href="http://dodolalorc.cn/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/index.xml" rel="self" type="application/rss+xml"/><item><title>线段树专题练习</title><link>http://dodolalorc.cn/posts/segtree_practice/</link><pubDate>Fri, 16 Aug 2024 22:43:59 +0800</pubDate><author>chenflora124@gmail.com (DODOLA)</author><guid>http://dodolalorc.cn/posts/segtree_practice/</guid><description>&lt;div class="details admonition abstract open">
 &lt;div class="details-summary admonition-title">
 &lt;i class="icon fas fa-list-ul fa-fw">&lt;/i>前言&lt;i class="details-icon fas fa-angle-right fa-fw">&lt;/i>
 &lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">痛定思痛练习线段树QAQ。&lt;/div>
 &lt;/div>
 &lt;/div>
&lt;p>此篇包含尚未写完的题，事实上是一个&lt;strong>TODO List&lt;/strong>。&lt;/p>
&lt;h3 id="todo-list" class="headerLink">
 &lt;a href="#todo-list" class="header-mark">&lt;/a>TODO List&lt;/h3>&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=1542" target="_blank" rel="noopener noreferrer">Atlantis&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://www.luogu.com.cn/problem/P5490" target="_blank" rel="noopener noreferrer">P5490 【模板】扫描线 &amp;amp; 矩形面积并 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=1754" target="_blank" rel="noopener noreferrer">I Hate It&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=1255" target="_blank" rel="noopener noreferrer">覆盖的面积&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=1166" target="_blank" rel="noopener noreferrer">敌兵布阵&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.luogu.com.cn/problem/P4588" target="_blank" rel="noopener noreferrer">P4588 TJOI2018 数学计算 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> &lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=7463" target="_blank" rel="noopener noreferrer">单峰数列&lt;/a> ✅ 2024-09-26&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=7530" target="_blank" rel="noopener noreferrer">树上询问&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.luogu.com.cn/problem/P1502" target="_blank" rel="noopener noreferrer">P1502 窗口的星星 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.luogu.com.cn/problem/P2471" target="_blank" rel="noopener noreferrer">P2471 SCOI2007 降雨量 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="atlantis--p5490-扫描线矩形面积并" class="headerLink">
 &lt;a href="#atlantis--p5490-%e6%89%ab%e6%8f%8f%e7%ba%bf%e7%9f%a9%e5%bd%a2%e9%9d%a2%e7%a7%af%e5%b9%b6" class="header-mark">&lt;/a>Atlantis &amp;amp; P5490 扫描线矩形面积并&lt;/h2>&lt;p>&lt;a href="https://acm.hdu.edu.cn/showproblem.php?pid=1542" target="_blank" rel="noopener noreferrer">Problem - 1542 (hdu.edu.cn)&lt;/a>&lt;/p></description></item><item><title>线段树讲义||寒假</title><link>http://dodolalorc.cn/posts/segtreelecnote/</link><pubDate>Wed, 13 Mar 2024 13:29:07 +0800</pubDate><author>chenflora124@gmail.com (DODOLA)</author><guid>http://dodolalorc.cn/posts/segtreelecnote/</guid><description>&lt;h2 id="线段树介绍" class="headerLink">
 &lt;a href="#%e7%ba%bf%e6%ae%b5%e6%a0%91%e4%bb%8b%e7%bb%8d" class="header-mark">&lt;/a>线段树介绍&lt;/h2>&lt;ul>
&lt;li>线段树是一棵二叉树，每个节点维护一个区间内$[l,r]$的信息&lt;/li>
&lt;li>左子树区间维护$[l,\lfloor \frac{l+r}{2} \rfloor]$的信息，右子树维护$[\lfloor \frac{l+r}{2} \rfloor+1,r]$的信息&lt;/li>
&lt;li>节点信息可以由两个子节点合并得到&lt;/li>
&lt;li>任意一个区间会被分为线段树上$O(\log n)$个节点&lt;/li>
&lt;/ul>
&lt;p>线段树可以在$O(\log N)$的时间复杂度内实现&lt;strong>单点修改&lt;/strong>、&lt;strong>区间修改&lt;/strong>、**区间查询（区间求和/区间最大值/区间最小值）**等操作。&lt;/p></description></item><item><title>线段树模板</title><link>http://dodolalorc.cn/posts/seg_tree/</link><pubDate>Sat, 06 Jan 2024 21:53:21 +0800</pubDate><author>chenflora124@gmail.com (DODOLA)</author><guid>http://dodolalorc.cn/posts/seg_tree/</guid><description>&lt;h3 id="线段树segment-tree" class="headerLink">
 &lt;a href="#%e7%ba%bf%e6%ae%b5%e6%a0%91segment-tree" class="header-mark">&lt;/a>线段树(segment tree)&lt;/h3>&lt;p>线段树主要用于维护区间信息，与传统的树状数组相比，可以实现&lt;code>O(log n)&lt;/code>的区间修改，还可以同时支持多种操作(加、乘)，更具通用性。&lt;/p></description></item><item><title>图论基础||存储图||DFS、BFS(图论)</title><link>http://dodolalorc.cn/posts/graph_basic/</link><pubDate>Sat, 06 Jan 2024 14:15:17 +0800</pubDate><author>chenflora124@gmail.com (DODOLA)</author><guid>http://dodolalorc.cn/posts/graph_basic/</guid><description>&lt;h3 id="11图的定义" class="headerLink">
 &lt;a href="#11%e5%9b%be%e7%9a%84%e5%ae%9a%e4%b9%89" class="header-mark">&lt;/a>1.1图的定义&lt;/h3>&lt;p>上课讲过一大堆这里不再赘述，直接学习代码实现。&lt;/p>
&lt;h3 id="12图的存储" class="headerLink">
 &lt;a href="#12%e5%9b%be%e7%9a%84%e5%ad%98%e5%82%a8" class="header-mark">&lt;/a>1.2图的存储&lt;/h3>&lt;p>例图展示：&lt;/p>
&lt;pre class="mermaid">graph LR
v1((v1))--4-->v2((v2))
v1((v1))--9-->v6((v6))
v3((v3))--19-->v2((v2))
v3((v3))--22-->v1((v1))
v4((v4))--17-->v3((v3))
v5((v5))--29-->v8((v8))
v6((v6))--12-->v1((v1))
v6((v6))--9-->v5((v5))
v6((v6))--4-->v7((v7))
v7((v7))--25-->v4((v4))
v8((v8))--7-->v7((v7))
v8((v8))--11-->v3((v3))
&lt;/pre>&lt;p>&lt;code>设n个点，m条边&lt;/code>&lt;/p>
&lt;p>上图的数据（按照 起点-终点-权值）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">8 12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5 8 29
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6 1 12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8 3 11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1 2 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3 1 22
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4 3 17
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7 4 25
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6 5 9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8 7 7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1 6 9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3 2 19
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6 7 4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="邻接矩阵" class="headerLink">
 &lt;a href="#%e9%82%bb%e6%8e%a5%e7%9f%a9%e9%98%b5" class="header-mark">&lt;/a>邻接矩阵&lt;/h4>&lt;ul>
&lt;li>遍历效率低、不能存重边、初始化效率低&lt;code>初始化O(n^2)时间，建图O(m)时间&lt;/code>、空间开销大&lt;code>O(n^2)&lt;/code>&lt;/li>
&lt;li>对于稀疏图来说大部分是INF，空间利用效率也不高&lt;/li>
&lt;/ul>
&lt;h4 id="前向星" class="headerLink">
 &lt;a href="#%e5%89%8d%e5%90%91%e6%98%9f" class="header-mark">&lt;/a>前向星&lt;/h4>&lt;p>前向星涉及排序，所以其时间复杂度和排序算法有关，一般情况下时间复杂度为&lt;code>O(mlog m)&lt;/code>，空间上需要两个数组（记录边的边数组、记录各点在边数组中起始位置的head数组），空间复杂度为&lt;code>O(m+n)&lt;/code>&lt;/p></description></item></channel></rss>