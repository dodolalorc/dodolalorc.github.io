"use strict";(self.webpackChunkblogsite_rspress=self.webpackChunkblogsite_rspress||[]).push([["2393"],{2050:function(e,s,n){n.r(s),n.d(s,{default:()=>c});var r=n(2676),a=n(453),l=n(3208);function t(e){let s=Object.assign({h2:"h2",a:"a",ul:"ul",li:"li",span:"span",math:"math",semantics:"semantics",mrow:"mrow",mo:"mo",mi:"mi",annotation:"annotation",mfrac:"mfrac",mn:"mn",p:"p",strong:"strong",blockquote:"blockquote",ol:"ol",h3:"h3",img:"img",h4:"h4",pre:"pre",code:"code"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h2,{id:"线段树介绍",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#线段树介绍",children:"#"}),"线段树介绍"]}),"\n",(0,r.jsx)(l.Z,{defaultLocale:"zh-CN"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["线段树是一棵二叉树，每个节点维护一个区间内",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"的信息"]}),"\n",(0,r.jsxs)(s.li,{children:["左子树区间维护",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mo,{stretchy:"false",children:"⌊"}),(0,r.jsxs)(s.mfrac,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{children:"+"}),(0,r.jsx)(s.mi,{children:"r"})]}),(0,r.jsx)(s.mn,{children:"2"})]}),(0,r.jsx)(s.mo,{stretchy:"false",children:"⌋"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,\\lfloor \\frac{l+r}{2} \\rfloor]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1.2251em",verticalAlign:"-0.345em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"⌊"}),(0,r.jsxs)(s.span,{className:"mord",children:[(0,r.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,r.jsx)(s.span,{className:"mfrac",children:(0,r.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(s.span,{className:"vlist-r",children:[(0,r.jsxs)(s.span,{className:"vlist",style:{height:"0.8801em"},children:[(0,r.jsxs)(s.span,{style:{top:"-2.655em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(s.span,{className:"mord mtight",children:(0,r.jsx)(s.span,{className:"mord mtight",children:"2"})})})]}),(0,r.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,r.jsxs)(s.span,{style:{top:"-3.394em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(s.span,{className:"mord mtight",children:[(0,r.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mbin mtight",children:"+"}),(0,r.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02778em"},children:"r"})]})})]})]}),(0,r.jsx)(s.span,{className:"vlist-s",children:"​"})]}),(0,r.jsx)(s.span,{className:"vlist-r",children:(0,r.jsx)(s.span,{className:"vlist",style:{height:"0.345em"},children:(0,r.jsx)(s.span,{})})})]})}),(0,r.jsx)(s.span,{className:"mclose nulldelimiter"})]}),(0,r.jsx)(s.span,{className:"mclose",children:"⌋]"})]})})]}),"的信息，右子树维护",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mo,{stretchy:"false",children:"⌊"}),(0,r.jsxs)(s.mfrac,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{children:"+"}),(0,r.jsx)(s.mi,{children:"r"})]}),(0,r.jsx)(s.mn,{children:"2"})]}),(0,r.jsx)(s.mo,{stretchy:"false",children:"⌋"}),(0,r.jsx)(s.mo,{children:"+"}),(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[\\lfloor \\frac{l+r}{2} \\rfloor+1,r]"})]})})}),(0,r.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1.2251em",verticalAlign:"-0.345em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"[⌊"}),(0,r.jsxs)(s.span,{className:"mord",children:[(0,r.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,r.jsx)(s.span,{className:"mfrac",children:(0,r.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,r.jsxs)(s.span,{className:"vlist-r",children:[(0,r.jsxs)(s.span,{className:"vlist",style:{height:"0.8801em"},children:[(0,r.jsxs)(s.span,{style:{top:"-2.655em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsx)(s.span,{className:"mord mtight",children:(0,r.jsx)(s.span,{className:"mord mtight",children:"2"})})})]}),(0,r.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,r.jsxs)(s.span,{style:{top:"-3.394em"},children:[(0,r.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(s.span,{className:"mord mtight",children:[(0,r.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mbin mtight",children:"+"}),(0,r.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02778em"},children:"r"})]})})]})]}),(0,r.jsx)(s.span,{className:"vlist-s",children:"​"})]}),(0,r.jsx)(s.span,{className:"vlist-r",children:(0,r.jsx)(s.span,{className:"vlist",style:{height:"0.345em"},children:(0,r.jsx)(s.span,{})})})]})}),(0,r.jsx)(s.span,{className:"mclose nulldelimiter"})]}),(0,r.jsx)(s.span,{className:"mclose",children:"⌋"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,r.jsx)(s.span,{className:"mbin",children:"+"}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})]})]}),"的信息"]}),"\n",(0,r.jsx)(s.li,{children:"节点信息可以由两个子节点合并得到"}),"\n",(0,r.jsxs)(s.li,{children:["任意一个区间会被分为线段树上",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"log"}),(0,r.jsx)(s.mo,{children:"⁡"}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(\\log n)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsxs)(s.span,{className:"mop",children:["lo",(0,r.jsx)(s.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"个节点"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["线段树可以在",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mi,{children:"O"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"("}),(0,r.jsx)(s.mi,{children:"log"}),(0,r.jsx)(s.mo,{children:"⁡"}),(0,r.jsx)(s.mi,{children:"N"}),(0,r.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"O(\\log N)"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,r.jsx)(s.span,{className:"mopen",children:"("}),(0,r.jsxs)(s.span,{className:"mop",children:["lo",(0,r.jsx)(s.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.10903em"},children:"N"}),(0,r.jsx)(s.span,{className:"mclose",children:")"})]})})]}),"的时间复杂度内实现",(0,r.jsx)(s.strong,{children:"单点修改"}),"、",(0,r.jsx)(s.strong,{children:"区间修改"}),"、**区间查询（区间求和/区间最大值/区间最小值）**等操作。"]}),"\n",(0,r.jsx)(s.p,{children:"线段树一般解决类似这样的问题："}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:"已知一个数列，你需要进行下面几种操作："}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["将某区间每一个数加上 ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"k"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6944em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]}),"。（修改）"]}),"\n",(0,r.jsx)(s.li,{children:"求出某区间每一个数的和。（查询）"}),"\n",(0,r.jsxs)(s.li,{children:["将某区间的每个数修改为",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"x"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"x"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"x"})]})})]}),"。（修改）"]}),"\n",(0,r.jsx)(s.li,{children:"求某区间的最大值/最小值。（查询）"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"建树",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#建树",children:"#"}),"建树"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{src:"https://cdn.jsdelivr.net/gh/dodolalorc/dodolaPicBed/segt1.svg",alt:"img"})}),"\n",(0,r.jsxs)(s.h4,{id:"实现",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#实现",children:"#"}),"实现"]}),"\n",(0,r.jsx)(s.p,{children:"递归实现"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"struct segTreeNode {\r\n    ll d = 0ll, lazy = 0ll;     // 数据&懒标记\r\n    bool used;  // 标记是否修改过\r\n};\r\n\r\nvector<ll>a(maxn);  // 原数据\r\nvector<segTreeNode>tree(maxn * 4);\r\n\r\nvoid build(int l, int r, int p) {\r\n    if (l == r) {\r\n        tree[p].d = a[l];\r\n        return;\r\n    }\r\n    int m = l + ((r - l) >> 1);\r\n\r\n    build(l, m, p << 1);	// 左边\r\n    build(m + 1, r, (p << 1) | 1);	// 右边\r\n\r\n    tree[p].d = tree[p << 1].d + tree[(p << 1) | 1].d;\r\n}\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"查询修改求值",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#查询修改求值",children:"#"}),"查询&修改&求值"]}),"\n",(0,r.jsxs)(s.h3,{id:"区间查询",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#区间查询",children:"#"}),"区间查询"]}),"\n",(0,r.jsx)(s.p,{children:"进行区间查询的时候，区间和节点区间的关系有三种可能："}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"当前要查询的区间与正在询问的区间没有交集，返回空"}),"\n",(0,r.jsx)(s.li,{children:"当前要查询的区间被某个节点的区间完全包含，直接取该点记录的值"}),"\n",(0,r.jsx)(s.li,{children:"当前要查询的区间被某个节点部分包含，则将这个节点往下传递一层，直到符合上面两种情况"}),"\n"]}),"\n",(0,r.jsxs)(s.h4,{id:"实现-1",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#实现-1",children:"#"}),"实现"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"ll getsum(int l, int r, int cl, int cr, int p) {\r\n    // if (cr<l || cl>r)return 0ll;     // 操作正确的话不可能会出现这种情况\r\n    if (cl >= l && cr <= r)return tree[p].d;\r\n\r\n    int m = cl + ((cr - cl) >> 1);\r\n    ll sum = 0ll;\r\n    if (m >= l)\r\n        sum += getsum(l, r, cl, m, p << 1);\r\n    if (m < r)\r\n        sum += getsum(l, r, m + 1, cr, (p << 1) | 1);\r\n    return sum;\r\n}\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"区间修改懒标记",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#区间修改懒标记",children:"#"}),"区间修改（懒标记）"]}),"\n",(0,r.jsx)(s.p,{children:"区间修改和区间查询的思路是一样的，判断当前节点区间与被修改的区间的关系，对其数据进行修改。"}),"\n",(0,r.jsxs)(s.p,{children:["假如我们在修改区间",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"时，把所有与",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"有交集的节点都遍历并修改一边，时间复杂度将过高，所以我们引入",(0,r.jsx)(s.strong,{children:"懒标记"}),"。"]}),"\n",(0,r.jsx)(s.p,{children:"思考："}),"\n",(0,r.jsxs)(s.p,{children:["当我们要修改",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"，有一个节点（或者是一些节点的并集）恰好是",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"，我们选择节点数最少的那个集合进行修改，并对这些集合进行标记，只有当某次访问需要这些节点的子节点时，才把变化传递下去，这样可以大大减少对更深处的节点的修改次数，降低时间复杂度。"]}),"\n",(0,r.jsxs)(s.h4,{id:"实现-2",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#实现-2",children:"#"}),"实现"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"void update(int l, int r, int cl, int cr, int p, ll x) {\r\n    // 给区间[l,r]的每个数都加上x\r\n    // if (cr<l || cl>r)return;\r\n    if (cl >= l && cr <= r) {\r\n        tree[p].d += (cr - cl + 1) * x;\r\n        tree[p].lazy += x;\r\n        return;\r\n    }\r\n    int m = cl + ((cr - cl) >> 1);\r\n    if (tree[p].lazy) {\r\n        tree[p << 1].d += tree[p].lazy * (m - cl + 1);\r\n        tree[(p << 1) | 1].d += tree[p].lazy * (cr - m);\r\n        tree[p << 1].lazy += tree[p].lazy;\r\n        tree[(p << 1) | 1].lazy += tree[p].lazy;\r\n        tree[p].lazy = 0ll;\r\n    }\r\n    if (m >= l)update(l, r, cl, m, p << 1, x);\r\n    if (m < r)update(l, r, m + 1, cr, (p << 1) | 1, x);\r\n\r\n    tree[p].d = tree[p << 1].d + tree[(p << 1) | 1].d;\r\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"相应的，引入懒区间之后，我们在区间查询的时候要考虑懒标记是否下达，如果没有下达则要将懒标记传递下去。"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"ll getsum(int l, int r, int cl, int cr, int p) {\r\n    // if (cr<l || cl>r)return 0ll;     // 操作正确的话不可能会出现这种情况\r\n    if (cl >= l && cr <= r)return tree[p].d;\r\n\r\n    int m = cl + ((cr - cl) >> 1);\r\n\r\n    if (tree[p].lazy) {\r\n        tree[p << 1].lazy += tree[p].lazy, tree[(p << 1) | 1].lazy += tree[p].lazy;\r\n        tree[p << 1].d += tree[p].lazy * (m + 1 - cl), tree[(p << 1) | 1].d += tree[p].lazy * (cr - m);\r\n        tree[p].lazy = 0;\r\n    }\r\n\r\n    ll sum = 0ll;\r\n    if (m >= l)\r\n        sum += getsum(l, r, cl, m, p << 1);\r\n    if (m < r)\r\n        sum += getsum(l, r, m + 1, cr, (p << 1) | 1);\r\n    return sum;\r\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"例题指路："}),"\n",(0,r.jsxs)(s.p,{children:["区间求和：",(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P3372",rel:"noopener noreferrer",target:"_blank",children:"P3372 【模板】线段树 1 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})]}),"\n",(0,r.jsxs)(s.h4,{id:"参考",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#参考",children:"#"}),"参考"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxn = 1e5 + 10;\r\n/*\r\n线段树模板1：实现区间加/求和的模板\r\n洛谷P3372\r\n*/\r\nstruct segTreeNode {\r\n    ll d, lazy;     // 数据&懒标记\r\n    bool used;  // 标记是否修改过\r\n};\r\n\r\nvector<ll>a(maxn);  // 原数据\r\nvector<segTreeNode>tree(maxn * 4);\r\n\r\nvoid build(int l, int r, int p) {\r\n    if (l == r) {\r\n        tree[p].d = a[l];\r\n        return;\r\n    }\r\n    int m = l + ((r - l) >> 1);\r\n\r\n    build(l, m, p << 1);\r\n    build(m + 1, r, (p << 1) | 1);\r\n\r\n    tree[p].d = tree[p << 1].d + tree[(p << 1) | 1].d;\r\n}\r\n\r\nvoid update(int l, int r, int cl, int cr, int p, ll x) {\r\n    // 给区间[l,r]的每个数都加上x\r\n    // if (cr<l || cl>r)return;\r\n    if (cl >= l && cr <= r) {\r\n        tree[p].d += (cr - cl + 1) * x;\r\n        tree[p].lazy += x;\r\n        return;\r\n    }\r\n    int m = cl + ((cr - cl) >> 1);\r\n    if (tree[p].lazy) {\r\n        tree[p << 1].d += tree[p].lazy * (m - cl + 1);\r\n        tree[(p << 1) | 1].d += tree[p].lazy * (cr - m);\r\n        tree[p << 1].lazy += tree[p].lazy;\r\n        tree[(p << 1) | 1].lazy += tree[p].lazy;\r\n        tree[p].lazy = 0ll;\r\n    }\r\n    if (m >= l)update(l, r, cl, m, p << 1, x);\r\n    if (m < r)update(l, r, m + 1, cr, (p << 1) | 1, x);\r\n\r\n    tree[p].d = tree[p << 1].d + tree[(p << 1) | 1].d;\r\n}\r\n\r\nll getsum(int l, int r, int cl, int cr, int p) {\r\n    // if (cr<l || cl>r)return 0ll;     // 操作正确的话不可能会出现这种情况\r\n    if (cl >= l && cr <= r)return tree[p].d;\r\n\r\n    int m = cl + ((cr - cl) >> 1);\r\n    if (tree[p].lazy) {\r\n        tree[p << 1].lazy += tree[p].lazy, tree[(p << 1) | 1].lazy += tree[p].lazy;\r\n        tree[p << 1].d += tree[p].lazy * (m + 1 - cl), tree[(p << 1) | 1].d += tree[p].lazy * (cr - m);\r\n        tree[p].lazy = 0;\r\n    }\r\n    ll sum = 0ll;\r\n    if (m >= l)\r\n        sum += getsum(l, r, cl, m, p << 1);\r\n    if (m < r)\r\n        sum += getsum(l, r, m + 1, cr, (p << 1) | 1);\r\n    return sum;\r\n}\r\n\r\nvoid solve() {\r\n    int n, m;cin >> n >> m;\r\n    for (int i = 1;i <= n;i++)\r\n        cin >> a[i];\r\n    build(1, n, 1);\r\n    while (m--) {\r\n        int op;cin >> op;\r\n        if (op == 1) {\r\n            int x, y;ll k;\r\n            cin >> x >> y >> k;\r\n            update(x, y, 1, n, 1, k);\r\n        }\r\n        else {\r\n            int x, y;cin >> x >> y;\r\n            cout << getsum(x, y, 1, n, 1) << '\\n';\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    int _ = 1;\r\n    // cin >> _;cin.get();\r\n    while (_--)\r\n        solve();\r\n}\n"})}),"\n",(0,r.jsxs)(s.h4,{id:"思考",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#思考",children:"#"}),"思考"]}),"\n",(0,r.jsx)(s.p,{children:"相似的，如果是将某个区间内的值都修改为某个值，应该如何操作？"}),"\n",(0,r.jsxs)(s.h3,{id:"例题-1两种懒标记",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#例题-1两种懒标记",children:"#"}),"例题 1（两种懒标记）"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P3373",rel:"noopener noreferrer",target:"_blank",children:"P3373 【模板】线段树 2 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["操作 1： 格式：",(0,r.jsx)(s.code,{children:"1 x y k"})," 含义：将区间",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"x"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"y"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[x,y]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"内每个数乘上 k"]}),"\n",(0,r.jsxs)(s.p,{children:["操作 2： 格式：",(0,r.jsx)(s.code,{children:"2 x y k"})," 含义：将区间",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"x"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"y"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[x,y]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," 内每个数加上 k"]}),"\n",(0,r.jsxs)(s.p,{children:["操作 3： 格式：",(0,r.jsx)(s.code,{children:"3 x y"})," 含义：输出区间 ",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"x"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"y"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[x,y]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"y"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]})," 内每个数的和对 m 取模所得的结果"]}),"\n",(0,r.jsx)(s.p,{children:"这题需要考虑两种修改值的操作之间的相互影响。"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"每次对节点加/乘之前，要判断是否需要将当前节点的两种懒标记向下传递"}),"\n",(0,r.jsx)(s.li,{children:"判断时应该先乘后加"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.h4,{id:"参考-1",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#参考-1",children:"#"}),"参考"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxn = 1e5 + 10;\r\n/*\r\n线段树模板2：实现区间加+乘、求和的模板\r\n洛谷P3372\r\n*/\r\nstruct segTreeNode {\r\n    ll d, lazyPlus, lazyTime;\r\n    /*TIP:在开结构体vector时已有初始值会使所有初始值塞入程序，会导致编译时间过长+内存溢出*/\r\n    bool used;  // 标记是否修改过\r\n};\r\n\r\nll mo;\r\nvector<ll>a(maxn);  // 原数据\r\nvector<segTreeNode>tree(maxn * 4);\r\n\r\nvoid build(int l, int r, int p) {\r\n    tree[p].lazyTime = 1ll;\r\n    if (l == r) {\r\n        tree[p].d = a[l] % mo;\r\n        return;\r\n    }\r\n    int mid = l + ((r - l) >> 1);\r\n\r\n    build(l, mid, p << 1);\r\n    build(mid + 1, r, (p << 1) | 1);\r\n\r\n    tree[p].d = (tree[p << 1].d + tree[(p << 1) | 1].d) % mo;\r\n}\r\n\r\nvoid pd(int cl, int cr, int p) {\r\n    int l = p << 1;\r\n    int r = (p << 1) | 1;\r\n    // 先乘后加\r\n    if (tree[p].lazyTime != 1ll) {\r\n        tree[l].lazyTime *= tree[p].lazyTime;\r\n        tree[r].lazyTime *= tree[p].lazyTime;\r\n        tree[l].lazyTime %= mo;\r\n        tree[r].lazyTime %= mo;\r\n\r\n        // 对子节点懒标记乘\r\n        tree[l].lazyPlus *= tree[p].lazyTime;\r\n        tree[r].lazyPlus *= tree[p].lazyTime;\r\n        tree[l].lazyPlus %= mo;\r\n        tree[r].lazyPlus %= mo;\r\n        // 对子节点数值乘\r\n        tree[l].d *= tree[p].lazyTime;\r\n        tree[r].d *= tree[p].lazyTime;\r\n        tree[l].d %= mo;\r\n        tree[r].d %= mo;\r\n\r\n        tree[p].lazyTime = 1ll;\r\n    }\r\n\r\n    int mid = cl + ((cr - cl) >> 1);\r\n\r\n    if (tree[p].lazyPlus) {\r\n        tree[l].d += tree[p].lazyPlus * (mid - cl + 1);\r\n        tree[l].d %= mo;\r\n        tree[r].d += tree[p].lazyPlus * (cr - mid);\r\n        tree[r].d %= mo;\r\n        tree[l].lazyPlus += tree[p].lazyPlus;\r\n        tree[l].lazyPlus %= mo;\r\n        tree[r].lazyPlus += tree[p].lazyPlus;\r\n        tree[r].lazyPlus %= mo;\r\n        tree[p].lazyPlus = 0ll;\r\n    }\r\n}\r\n\r\nvoid updateTime(int l, int r, int cl, int cr, int p, ll x) {\r\n    // 给区间[l,r]的每个数都乘上x\r\n    if (cl >= l && cr <= r) {\r\n        tree[p].lazyTime *= x;\r\n        tree[p].lazyTime %= mo;\r\n        tree[p].lazyPlus *= x;\r\n        tree[p].lazyPlus %= mo;\r\n        tree[p].d *= x;\r\n        tree[p].d %= mo;\r\n        return;\r\n    }\r\n\r\n    pd(cl, cr, p);\r\n\r\n    int mid = cl + ((cr - cl) >> 1);\r\n    if (mid >= l)updateTime(l, r, cl, mid, p << 1, x);\r\n    if (mid < r)updateTime(l, r, mid + 1, cr, (p << 1) | 1, x);\r\n\r\n    tree[p].d = (tree[p << 1].d + tree[(p << 1) | 1].d) % mo;\r\n}\r\n\r\nvoid updatePlus(int l, int r, int cl, int cr, int p, ll x) {\r\n    // 给区间[l,r]的每个数都加上x\r\n    if (cl >= l && cr <= r) {\r\n        tree[p].d += (cr - cl + 1) * x;\r\n        tree[p].d %= mo;\r\n        tree[p].lazyPlus += x;\r\n        tree[p].lazyPlus %= mo;\r\n        return;\r\n    }\r\n\r\n    pd(cl, cr, p);\r\n\r\n    int mid = cl + ((cr - cl) >> 1);\r\n    if (mid >= l)updatePlus(l, r, cl, mid, p << 1, x);\r\n    if (mid < r)updatePlus(l, r, mid + 1, cr, (p << 1) | 1, x);\r\n\r\n    tree[p].d = (tree[p << 1].d + tree[(p << 1) | 1].d) % mo;\r\n}\r\n\r\nll getsum(int l, int r, int cl, int cr, int p) {\r\n    if (cl >= l && cr <= r)return tree[p].d;\r\n\r\n    int mid = cl + ((cr - cl) >> 1);\r\n\r\n    pd(cl, cr, p);\r\n\r\n    ll sum = 0ll;\r\n    if (mid >= l)\r\n        sum += getsum(l, r, cl, mid, p << 1);\r\n    sum %= mo;\r\n    if (mid < r)\r\n        sum += getsum(l, r, mid + 1, cr, (p << 1) | 1);\r\n    return sum % mo;\r\n}\r\n\r\nvoid solve() {\r\n    int n, q;cin >> n >> q >> mo;\r\n    for (int i = 1;i <= n;i++)\r\n        cin >> a[i];\r\n    build(1, n, 1);\r\n    while (q--) {\r\n        int op;cin >> op;\r\n        if (op == 1) {\r\n            int x, y;ll k;\r\n            cin >> x >> y >> k;\r\n            updateTime(x, y, 1, n, 1, k);\r\n        }\r\n        else if (op == 2) {\r\n            int x, y;ll k;\r\n            cin >> x >> y >> k;\r\n            updatePlus(x, y, 1, n, 1, k);\r\n        }\r\n        else {\r\n            int x, y;cin >> x >> y;\r\n            cout << getsum(x, y, 1, n, 1) << '\\n';\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    int _ = 1;\r\n    // cin >> _;cin.get();\r\n    while (_--)\r\n        solve();\r\n}\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"动态开点",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#动态开点",children:"#"}),"动态开点"]}),"\n",(0,r.jsxs)(s.p,{children:["一般来说，线段树处理的范围在",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"n"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[1,n]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"，",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"n"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]}),"一般是",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mn,{children:"5"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1e5"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(s.span,{className:"mord",children:"5"})]})})]}),"的大小。"]}),"\n",(0,r.jsxs)(s.p,{children:["如果我们想处理负数的范围，或者是",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsx)(s.mrow,{children:(0,r.jsx)(s.mi,{children:"n"})}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]}),"达到",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"1"}),(0,r.jsx)(s.mi,{children:"e"}),(0,r.jsx)(s.mn,{children:"9"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"1e9"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"1"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"e"}),(0,r.jsx)(s.span,{className:"mord",children:"9"})]})})]}),"的数量级时，我们就需要可以动态开点的线段树。"]}),"\n",(0,r.jsxs)(s.p,{children:["线段树我们一般开到",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mn,{children:"4"}),(0,r.jsx)(s.mi,{children:"n"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"4n"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,r.jsx)(s.span,{className:"mord",children:"4"}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]}),"的大小是充足的，为了节省空间以及直接建立全树的时间，我们也可以对线段树动态开点，也就是只有当我们需要用到某些节点的时候，才去创造它。"]}),"\n",(0,r.jsxs)(s.p,{children:["比如，我们已经一个节点表示",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mn,{children:"11"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mn,{children:"16"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[11,16]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord",children:"11"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord",children:"16"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"的相关数据，我们需要修改",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mn,{children:"13"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mn,{children:"15"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[13,15]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord",children:"13"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord",children:"15"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"上的信息，我们就创造",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mn,{children:"11"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mn,{children:"13"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[11,13]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord",children:"11"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord",children:"13"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"和",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mn,{children:"14"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mn,{children:"16"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[14,16]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord",children:"14"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord",children:"16"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"的节点，并继续递归创建节点，直到这个线段树可以完全表示到已被修改的信息。"]}),"\n",(0,r.jsxs)(s.h3,{id:"实现-3",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#实现-3",children:"#"}),"实现"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxv = 8e6;  // 一般有多大开多大\r\n\r\n/*\r\n线段树模板3：动态开点技巧\r\n*/\r\nstruct segTreeNode {\r\n    ll d, lazy;\r\n    int lson, rson; // 记录左右子的下标\r\n};\r\n\r\nvector<segTreeNode>tree(maxv);\r\nint tot = 1;    // 总节点数\r\n\r\nvoid update(int cl, int cr, int& p, ll addnum) {\r\n    if (!p)p = ++tot;\r\n    tree[p].d += addnum * (cr - cl + 1);\r\n    tree[p].lazy += addnum;\r\n}\r\n\r\nvoid pushdown(int p, int cl, int cr) {  // 节点p没有左右子时给它开点。\r\n    if (cr - cl + 1 <= 1)return;\r\n    int mid = (cr + cl - 1) >> 1;\r\n    update(cl, mid, tree[p].lson, tree[p].lazy);\r\n    update(mid + 1, cr, tree[p].rson, tree[p].lazy);\r\n    tree[p].lazy = 0;\r\n}\r\n\r\nvoid updatePlus(int l, int r, int cl, int cr, int p, ll x) {\r\n    // 给区间[l,r]里每个数加x\r\n    if (cl >= l && cr <= r) {\r\n        tree[p].d += x * (cr - cl + 1);\r\n        tree[p].lazy += x;\r\n        return;\r\n    }\r\n    pushdown(p, cl, cr);\r\n    int mid = (cl + cr - 1) >> 1;\r\n    if (mid >= l)updatePlus(l, r, cl, mid, tree[p].lson, x);\r\n    if (mid < r)updatePlus(l, r, mid + 1, cr, tree[p].rson, x);\r\n\r\n    int ls = tree[p].lson, rs = tree[p].rs;\r\n    tree[p].d = tree[ls].d + tree[rs].d;\r\n}\r\n\r\nll getsum(int l, int r, int cl, int cr, int p) {\r\n    if (cl >= l && cr <= r)return tree[p].d;\r\n\r\n    pushdown(p, cl, cr);\r\n    int mid = (cl + cr - 1) / 2;  // 可以处理区间两端是负数的情况\r\n    ll sum = 0ll;\r\n    sum += getsum(l, r, cl, mid, tree[p].lson);\r\n    sum += getsum(l, r, mid + 1, cr, tree[p].rson);\r\n    return sum;\r\n}\r\n\r\nvoid solve() {\r\n    ll n, q;cin >> n >> q;\r\n    while (q--) {\r\n        ll l, r, k;cin >> l >> r >> k;\r\n        if(k==1){}\r\n    }\r\n}\r\n\r\nint main() {\r\n    int _ = 1;\r\n    // cin >> _;cin.get();\r\n    while (_--)\r\n        solve();\r\n}\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"线段树合并与分裂",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#线段树合并与分裂",children:"#"}),"线段树合并与分裂"]}),"\n",(0,r.jsxs)(s.h3,{id:"线段树合并",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#线段树合并",children:"#"}),"线段树合并"]}),"\n",(0,r.jsx)(s.p,{children:"线段树合并通过递归实现，需要有合并操作的线段树需要使用动态开点的技巧。"}),"\n",(0,r.jsx)(s.p,{children:"将线段树 a 和 b 合并，从 1 号点开始递归，若递归到某个节点为空，直接返回另一个树上的对应节点；若递归到叶子节点，我们合并两棵树上的对应节点。"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"void pushup(int a) {\r\n    int ls = tree[a].lson, rs = tree[a].rson;\r\n    tree[a].d = tree[ls].d + tree[rs].d;\r\n}\r\n\r\nint merge(int a, int b, int l, int r) {\r\n    if (!a)return b;\r\n    if (!b)return a;\r\n    if (l == r) {\r\n        // do sth\r\n        return a;\r\n    }\r\n\r\n    int mid = (l + r) >> 1;\r\n    tree[a].lson = merge(tree[a].lson, tree[b].lson, l, mid);\r\n    tree[a].rson = merge(tree[a].rson, tree[b].rson, mid + 1, r);\r\n\r\n    pushup(a);\r\n    return a;\r\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["模板题：[P4556 ",(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P4556",rel:"noopener noreferrer",target:"_blank",children:"Vani 有约会] 雨天的尾巴 /【模板】线段树合并 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})]}),"\n",(0,r.jsxs)(s.h3,{id:"线段树分裂",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#线段树分裂",children:"#"}),"线段树分裂"]}),"\n",(0,r.jsx)(s.p,{children:"线段树分裂是线段树合并的逆过程。"}),"\n",(0,r.jsx)(s.p,{children:"线段树分裂只适用于有序的序列，无序的序列是没有意义的，常用在动态开点的权值线段树上。"}),"\n",(0,r.jsx)(s.p,{children:"当分裂和合并都存在时，要注意回收节点，以免分裂时会出现节点重复/占用的问题。"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["当",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"t"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[s,t]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"与",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"有交集时开新节点"]}),"\n",(0,r.jsxs)(s.li,{children:["当",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"s"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"t"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[s,t]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"包含于",(0,r.jsxs)(s.span,{className:"katex",children:[(0,r.jsx)(s.span,{className:"katex-mathml",children:(0,r.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(s.semantics,{children:[(0,r.jsxs)(s.mrow,{children:[(0,r.jsx)(s.mo,{stretchy:"false",children:"["}),(0,r.jsx)(s.mi,{children:"l"}),(0,r.jsx)(s.mo,{separator:"true",children:","}),(0,r.jsx)(s.mi,{children:"r"}),(0,r.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,r.jsx)(s.annotation,{encoding:"application/x-tex",children:"[l,r]"})]})})}),(0,r.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(s.span,{className:"base",children:[(0,r.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.jsx)(s.span,{className:"mopen",children:"["}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,r.jsx)(s.span,{className:"mpunct",children:","}),(0,r.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"r"}),(0,r.jsx)(s.span,{className:"mclose",children:"]"})]})})]}),"时，直接将当前节点接到新的树下面，把旧边断开。"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:"void pushup(int a) {\r\n    int ls = tree[a].lson, rs = tree[a].rson;\r\n    tree[a].d = tree[ls].d + tree[rs].d;\r\n}\r\n\r\nvoid split(int& p, int& q, int s, int t, int l, int r) {\r\n    // 从[s,t]的线段树中分裂出区间是[l,r]的线段树\r\n    if (t < l || r < s) return;\r\n    if (!p) return;\r\n    if (l <= s && t <= r) {\r\n        q = p;\r\n        p = 0;\r\n        return;\r\n    }\r\n    if (!q) q = ++tot;\r\n    int m = s + t >> 1;\r\n    if (l <= m) split(tree[p].lson, tree[p].rson, s, m, l, r);\r\n    if (m < r) split(tree[p].lson, tree[p].rson, m + 1, t, l, r);\r\n    pushup(p);\r\n    pushup(q);\r\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["模板题：",(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P5494",rel:"noopener noreferrer",target:"_blank",children:"P5494 【模板】线段树分裂 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})]}),"\n",(0,r.jsxs)(s.h2,{id:"练习题一览",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#练习题一览",children:"#"}),"练习题一览"]}),"\n",(0,r.jsx)(s.p,{children:"一些模板题/测测你的板子(!"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P3372",rel:"noopener noreferrer",target:"_blank",children:"P3372 【模板】线段树 1 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P3373",rel:"noopener noreferrer",target:"_blank",children:"P3373 【模板】线段树 2 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://acm.hdu.edu.cn/showproblem.php?pid=5306",rel:"noopener noreferrer",target:"_blank",children:"Problem - 5306 (hdu.edu.cn)"})}),"\n",(0,r.jsxs)(s.p,{children:["[P4556 ",(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P4556",rel:"noopener noreferrer",target:"_blank",children:"Vani 有约会] 雨天的尾巴 /【模板】线段树合并 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P5494",rel:"noopener noreferrer",target:"_blank",children:"P5494 【模板】线段树分裂 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})}),"\n",(0,r.jsxs)(s.p,{children:["[P4097 【模板】李超线段树 / ",(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P4097",rel:"noopener noreferrer",target:"_blank",children:"HEOI2013] Segment - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P3369",rel:"noopener noreferrer",target:"_blank",children:"P3369 【模板】普通平衡树 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"https://www.luogu.com.cn/problem/P3391",rel:"noopener noreferrer",target:"_blank",children:"P3391 【模板】文艺平衡树 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}let c=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["posts%2Falgorithm%2Fsegtreelecnote.md"]={toc:[{id:"线段树介绍",text:"线段树介绍",depth:2},{id:"建树",text:"建树",depth:3},{id:"实现",text:"实现",depth:4},{id:"查询修改求值",text:"查询&修改&求值",depth:2},{id:"区间查询",text:"区间查询",depth:3},{id:"实现-1",text:"实现",depth:4},{id:"区间修改懒标记",text:"区间修改（懒标记）",depth:3},{id:"实现-2",text:"实现",depth:4},{id:"参考",text:"参考",depth:4},{id:"思考",text:"思考",depth:4},{id:"例题-1两种懒标记",text:"例题 1（两种懒标记）",depth:3},{id:"参考-1",text:"参考",depth:4},{id:"动态开点",text:"动态开点",depth:2},{id:"实现-3",text:"实现",depth:3},{id:"线段树合并与分裂",text:"线段树合并与分裂",depth:2},{id:"线段树合并",text:"线段树合并",depth:3},{id:"线段树分裂",text:"线段树分裂",depth:3},{id:"练习题一览",text:"练习题一览",depth:2}],title:"线段树讲义||寒假",headingTitle:"",frontmatter:{title:"线段树讲义||寒假",date:"2024-03-13T05:29:07.000Z",draft:!1,authors:[],description:"",tags:["算法","线段树","数据结构","算法模板"],categories:["在学算法的日子里"],series:["算法模板笔记"],hiddenFromHomePage:!1,hiddenFromSearch:!1,featuredImage:"",featuredImagePreview:"",toc:{enable:!0},math:{enable:!0},lightgallery:!1,license:""}}},3208:function(e,s,n){n.d(s,{Z:()=>c});var r=n(2676),a=n(5271),l=n(2815);n(2791);let t={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function i(e,s,n){let r=Object.keys(t).includes(s)?s:n;return t[r](e)}let c=e=>{let{defaultLocale:s="en-US"}=e,n=(0,l.Vi)().page.readingTimeData,t=(0,l.Jr)(),c=(0,l.e7)(),[m,h]=(0,a.useState)(i(n,t,s));return(0,a.useEffect)(()=>{h(i(n,t,s))},[t,n]),(0,r.jsx)("span",{"data-dark":String(c),className:"rp-reading-time",children:m})}}}]);