"use strict";(self.webpackChunkblogsite_rspress=self.webpackChunkblogsite_rspress||[]).push([["4102"],{1724:function(n,e,i){i.r(e),i.d(e,{default:()=>a});var s=i(2676),t=i(453),c=i(5523);function r(n){let e=Object.assign({p:"p",h1:"h1",a:"a",strong:"strong",ul:"ul",li:"li",h2:"h2",code:"code",pre:"pre",h3:"h3",h4:"h4",img:"img"},(0,t.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:'{{< admonition abstract "前言" true>}}'}),"\n",(0,s.jsx)(e.p,{children:"这篇文章用于2024年蓝旭暑期项目前的培训作业教学，目的是从零开始构建一个购物车页面，以此来熟悉原生前端三件套。o((>ω< ))o"}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsxs)(e.h1,{id:"需求分析",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#需求分析",children:"#"}),"需求分析"]}),"\n",(0,s.jsx)(c.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"功能要求"}),"："]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"全选、单选联动逻辑（包括依次选中所有物品时自动勾选全选按钮、勾选全选时勾选所\n有单选、取消全选后取消所有选中等）、结算小项总价以及整体总价。"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"展示商品图片、名称、价格、数量等基础信息。"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"体现分页展示购物车内商品内容。"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"可以对购物车内商品进行增删改，即改变数量、结算商品、删除商品（结合分页显示数\n目合理调整）等。"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"美观的页面效果。"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"加分功能"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"实现在购物车页面查找商品的功能。"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"自己写一个弹出提示框，在删除商品、结算商品等行为后与用户进行确认交互。"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h1,{id:"页面布局",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#页面布局",children:"#"}),"页面布局"]}),"\n",(0,s.jsxs)(e.h2,{id:"整体布局",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#整体布局",children:"#"}),"整体布局"]}),"\n",(0,s.jsxs)(e.p,{children:["整个购物车页面有三个主要功能：",(0,s.jsx)(e.code,{children:"列表"}),"、",(0,s.jsx)(e.code,{children:"结算"}),"、",(0,s.jsx)(e.code,{children:"分页"}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["购物车页面的布局主要分为两部分：",(0,s.jsx)(e.strong,{children:"购物车列表"}),"和",(0,s.jsx)(e.strong,{children:"结算栏"}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["购物车列表是购物车页面的主体部分，用于展示用户购物车中的商品信息，我们将整个列表设计在整个页面的中部，在顶部设计一个",(0,s.jsx)(e.code,{children:"nav"}),"用于展示购物车的标题，以及作为之后的路由跳转的位置，这个nav设计成吸顶。"]}),"\n",(0,s.jsx)(e.p,{children:"中间主体部分是购物车列表，用于展示用户购物车中的商品信息。"}),"\n",(0,s.jsx)(e.p,{children:"底部我设计为结算栏，用于展示用户当前选中的总价，以及结算按钮。"}),"\n",(0,s.jsx)(e.p,{children:"分页的位置我设计在购物车列表之上，并且把它设计成向下滑动时吸顶的设计，这样用户在浏览商品时可以随时翻页。"}),"\n",(0,s.jsx)(e.p,{children:"于是整体的设计如下："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:'<body>\n  <div class="shell">\n    <nav>\n      {/* 用来设计路由栏 */}\n      <img class="nav-item" src="https://www.coca-cola.com/content/dam/onexp/cn/zh/logos/coke-header.png" alt="">\n      <div class="nav-item">购物车</div>\n      <div class="nav-item">订单</div>\n      <div class="nav-item">我的</div>\n    </nav>\n\n    <main>\n      <div class="title-div">\n        <div class="title">当前选中1样商品</div>\n        <div class="pagination">\n          <div class="page">1</div>\n          {/* 页码 */}\n          <div class="page">n</div>\n        </div>\n      </div>\n      <div class="container">\n        <div class="cart-item">\n          {/* 详细的购物车内商品信息 */}\n        </div>\n        <div class="cart-item">\n          {/* 详细的购物车内商品信息 */}\n        </div>\n        {/* .... */}\n      </div>\n    </main>\n\n    <footer>\n      <div class="sum-foot">\n        {/* 展示全选按钮和结算信息 */}\n      </div>\n    </footer>\n  </div>\n</body>\n'})}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition tip "关于吸顶和吸底的设计" false >}}'}),"\n",(0,s.jsxs)(e.p,{children:["设计吸顶和吸底的时候，我们可以使用",(0,s.jsx)(e.code,{children:"position: sticky"}),"属性，这个属性可以让元素在滚动到特定位置时固定在页面上，这样可以让用户在浏览页面时更加方便。"]}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsxs)(e.h3,{id:"购物车列表设计",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#购物车列表设计",children:"#"}),"购物车列表设计"]}),"\n",(0,s.jsx)(e.p,{children:"购物车列表的设计主要是展示购物车内的商品信息，我们需要展示商品的图片、名称、价格、数量等基础信息，我们把每个商品信息设计成一个卡片，之后我们可以通过js动态生成这些卡片。"}),"\n",(0,s.jsx)(e.p,{children:"这是我设计的一个商品卡片的结构："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:'<div class="cart-item">\n  <input type="radio">  {/* 单选按钮 */}\n  <img src="" alt="">   {/* 商品图片 */}\n  <div class="item-info">\n    <h2>{/* 商品名称 */}</h2>\n    <div class="info">\n      <div class="desp">\n        {/* 商品描述 */}\n      </div>\n      <div class="detail">\n        <div class="price">{/* 价格 */}</div>\n        <div class="quantity">\n          {/* 数量 */}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button class="del-btn">删除</button>\n</div>\n'})}),"\n",(0,s.jsx)(e.p,{children:"这是我的CSS样式："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:'.cart-item {\n    height: fit-content;\n    width: 80%;\n    margin-bottom: 1rem;\n    padding: 1rem;\n    background-color: rgba(255, 255, 255, 0.25);\n    backdrop-filter: blur(6px);\n    -webkit-backdrop-filter: blur(6px);\n    border: 0.666667px solid rgba(255, 255, 255, 0.18);\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    -webkit-box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n\n.cart-item input[type="radio"] {\n    margin-top: 1rem;\n    margin-right: 1rem;\n    cursor: pointer;\n    width: 1.5rem;\n}\n\n.cart-item img {\n    width: 160px;\n    height: 160px;\n    border-radius: 12px;\n    -webkit-border-radius: 12px;\n    box-shadow: rgba(142, 142, 142, 0.19) 0px 6px 15px 0px;\n}\n\n.cart-item .item-info {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    /* align-items: center; */\n    margin-left: 1rem;\n}\n\n.cart-item .info {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    .desp {\n        flex: 3;\n    }\n\n    .detail {\n        flex: 1;\n        margin: 0 1rem;\n        background-color: #dddddd94;\n        border-radius: 12px;\n        backdrop-filter: blur(6px);\n        -webkit-backdrop-filter: blur(6px);\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        padding: 0.5rem;\n\n        .price {\n            font-size: large;\n            font-weight: bold;\n            display: flex;\n\n            span {\n                flex: 1;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n            }\n        }\n\n        .quantity {\n            font-size: medium;\n            font-weight: bold;\n            display: flex;\n\n            span {\n                flex: 1;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n            }\n        }\n    }\n}\n\n\n.cart-item .del-btn {\n    background-color: #f8f9fa;\n    border: none;\n    color: red;\n    font-size: large;\n    font-weight: bold;\n    cursor: pointer;\n    margin-top: 1rem;\n}\n\n.cart-item .del-btn:hover {\n    color: #007bff;\n}\n'})}),"\n",(0,s.jsxs)(e.h4,{id:"css解释",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#css解释",children:"#"}),"CSS解释"]}),"\n",(0,s.jsx)(e.p,{children:"像上面这样直接甩出一堆代码，感觉会看起来有点懵，不过一条条的讲CSS会有点枯燥，这里稍微解释一下整体的设计想法。"}),"\n",(0,s.jsxs)(e.p,{children:["我比较习惯使用flex布局，所以整个卡片的设计都是基于flex布局的，首先整个卡片是一个",(0,s.jsx)(e.code,{children:"flex"}),"容器，里面有四个部分：",(0,s.jsx)(e.code,{children:"单选按钮"}),"、",(0,s.jsx)(e.code,{children:"商品图片"}),"、",(0,s.jsx)(e.code,{children:"商品信息"}),"、",(0,s.jsx)(e.code,{children:"删除按钮"}),"。按照这个顺序，我将他们横向排列，分别占据不同的比例。"]}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition tip "在flex布局中让内部元素水平垂直居中，并且间隔合适的技巧" false >}}'}),"\n",(0,s.jsxs)(e.p,{children:["在flex布局中，我们可以通过",(0,s.jsx)(e.code,{children:"justify-content"}),"和",(0,s.jsx)(e.code,{children:"align-items"}),"来控制元素的水平和垂直居中，通过",(0,s.jsx)(e.code,{children:"margin"}),"来控制元素之间的间隔。"]}),"\n",(0,s.jsxs)(e.p,{children:["其中",(0,s.jsx)(e.code,{children:"justify-content"}),"用于控制元素在主轴上的排列方式，",(0,s.jsx)(e.code,{children:"align-items"}),"用于控制元素在交叉轴上的排列方式。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:".div {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"justify-content"}),"除了",(0,s.jsx)(e.code,{children:"center"}),"之外还有",(0,s.jsx)(e.code,{children:"flex-start"}),"、",(0,s.jsx)(e.code,{children:"flex-end"}),"、",(0,s.jsx)(e.code,{children:"space-between"}),"、",(0,s.jsx)(e.code,{children:"space-around"}),"等属性，",(0,s.jsx)(e.code,{children:"align-items"}),"除了",(0,s.jsx)(e.code,{children:"center"}),"之外还有",(0,s.jsx)(e.code,{children:"flex-start"}),"、",(0,s.jsx)(e.code,{children:"flex-end"}),"、",(0,s.jsx)(e.code,{children:"baseline"}),"、",(0,s.jsx)(e.code,{children:"stretch"}),"等属性，是很方便的布局方式，可以节省大量之前需要通过不断调整",(0,s.jsx)(e.code,{children:"margin"}),"来实现的布局。具体区别可以在",(0,s.jsx)(e.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content",rel:"noopener noreferrer",target:"_blank",children:"这里"}),"和",(0,s.jsx)(e.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-items",rel:"noopener noreferrer",target:"_blank",children:"这里"}),"在线演示。"]}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsx)(e.p,{children:"我固定了单选按钮、商品图片、删除按钮的大小，商品信息部分占据了剩下的空间。"}),"\n",(0,s.jsxs)(e.p,{children:["商品信息部分又分为两个部分：",(0,s.jsx)(e.code,{children:"商品描述"}),"和",(0,s.jsx)(e.code,{children:"商品价格"}),"，我将他们分别占据了不同的比例，使得整个卡片看起来比较美观。"]}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition tip "在flex布局中让内部元素占据不同的比例" false >}}'}),"\n",(0,s.jsxs)(e.p,{children:["上面的",(0,s.jsx)(e.code,{children:"justify-content"}),"和",(0,s.jsx)(e.code,{children:"align-items"}),"更倾向于把元素均匀排列，有时候我们也需要让元素分别占据不同的比例，这时候我们可以试试通过",(0,s.jsx)(e.code,{children:"flex"}),"属性来控制元素。"]}),"\n",(0,s.jsxs)(e.p,{children:["例如上面的代码中，我通过",(0,s.jsx)(e.code,{children:"flex: 3"}),"和",(0,s.jsx)(e.code,{children:"flex: 1"}),"来控制商品描述和商品价格分别占据了3:1的比例。这样的写法相比较于",(0,s.jsx)(e.code,{children:"width"}),"属性更加灵活，可以根据不同的屏幕大小自动调整。就像下面这样："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:".cart-item .info {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    .desp {\n        flex: 3;\n    }\n\n    .detail {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n\n        .price {\n            span {\n                flex: 1;\n            }\n        }\n\n        .quantity {\n            span {\n                flex: 1;\n            }\n        }\n    }\n}\n\n"})}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsxs)(e.h4,{id:"图标库",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#图标库",children:"#"}),"图标库"]}),"\n",(0,s.jsxs)(e.p,{children:["相信大家看完图片之后发现，我在价格和数量的部分的加号减号按钮，以及",(0,s.jsx)(e.code,{children:"￥"}),"符号看起来不像原生的按钮和字符，这里我使用了",(0,s.jsx)(e.code,{children:"font-awesome"}),"图标库，这是一个很好用的图标库，在美化页面的时候我们其实会尝试使用很多图标，我比较喜欢的两个图标库是",(0,s.jsx)(e.a,{href:"https://fontawesome.com/",rel:"noopener noreferrer",target:"_blank",children:"Font awesome"}),"和",(0,s.jsx)(e.a,{href:"https://www.iconfont.cn/",rel:"noopener noreferrer",target:"_blank",children:"iconfont"}),"，大家可以尝试使用，使用方法大家可以自行学习，这里我就不再赘述了。"]}),"\n",(0,s.jsxs)(e.h4,{id:"在线工具推荐",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#在线工具推荐",children:"#"}),"在线工具推荐"]}),"\n",(0,s.jsxs)(e.p,{children:['有些同学可能不太擅长调整出好看的盒子，这里我推荐一个好用的前端工具在线网站：{{<link "',(0,s.jsx)(e.a,{href:"https://lingdaima.com/%22%3E%7D%7D",rel:"noopener noreferrer",target:"_blank",children:'https://lingdaima.com/">}}'})," ，可以帮助你快速调整出好看的CSS样式。"]}),"\n",(0,s.jsx)(e.p,{children:"当然了，在线工具只是起到一个辅助作用，调整CSS的时候还是需要自己多尝试，多调整，多看看效果。大家不要过分依赖哦(‾◡◝)"}),"\n",(0,s.jsx)(e.p,{children:"这里是整体设计完Html结构和CSS之后的效果："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://img.dodolalorc.cn/i/2024/07/07/66897122a1a47.png",alt:"购物车整体页面"})}),"\n",(0,s.jsx)(e.p,{children:"这个页面的效果是我自己设计的，大家可以根据自己的喜好进行调整，这里只是提供一个参考，相应的源码我也会公开放在我的gitee上，大家可以自行下载，仓库的地址在文末。"}),"\n",(0,s.jsxs)(e.h1,{id:"javascript逻辑",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#javascript逻辑",children:"#"}),"JavaScript逻辑"]}),"\n",(0,s.jsx)(e.p,{children:"我比较习惯在设计完页面之后再写JavaScript逻辑，这样可以更好的理清思路，而且不需要总是再次调整Html和CSS。在设计完页面之后，我们通过让这个页面不再是一个静态的页面，而是一个可以动态交互的页面。"}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition tip "通过本地json来获得数据和渲染数据" false >}}'}),"\n",(0,s.jsx)(e.p,{children:"由于这个只是用于前端学习的小项目，我们没有接口，不过在生成应用中，页面的数据是来自后端传递而来的（往往是一个json），所以在这个项目中，我们可以通过本地的json文件来模拟后端返回的数据，这样可以更好的模拟真实的购物车页面，同时也可以更好的理解前后端的交互。"}),"\n",(0,s.jsxs)(e.p,{children:["引入json文件的方法是通过",(0,s.jsx)(e.code,{children:"fetch"}),"方法，这是一个异步方法，我们可以通过这个方法来获取json文件，然后通过",(0,s.jsx)(e.code,{children:"json()"}),"方法来解析json文件。"]}),"\n",(0,s.jsx)(e.p,{children:"就像这样："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"fetch('data.json')\n  .then(response => response.json())\n  .then(data => console.log(data));\n"})}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsxs)(e.h2,{id:"js逻辑",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#js逻辑",children:"#"}),"JS逻辑"]}),"\n",(0,s.jsx)(e.p,{children:"为了方便管理数据，我将数据保存在一个全局变量中，这样可以更好的操作数据，下文的代码中，我会使用这些全局变量来操作数据。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"var goods = []; // 当前页的商品列表\nvar totItems = 0; // 总商品数\nvar curPage = 1; // 当前页码\nvar totPages = 1; // 总页数\n\nvar selectTotal = 0; // 选中商品总数\nvar curSelectGoods = [];  // 选中的商品列表\nvar selectAllStatus = false;  // 是否全选\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"数据获取与渲染",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#数据获取与渲染",children:"#"}),"数据获取与渲染"]}),"\n",(0,s.jsxs)(e.p,{children:["首先我们需要通过",(0,s.jsx)(e.code,{children:"fetch"}),"方法来获取json文件，然后通过",(0,s.jsx)(e.code,{children:"json()"}),"方法来解析json文件，这样我们就可以得到一个json对象，这个对象就是我们的商品信息。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"\nfetch('data.json')\n  .then(response => response.json())\n  .then(data => {\n    console.log(data);\n    render(data);\n  });\n\n"})}),"\n",(0,s.jsx)(e.p,{children:"获取数据之后，我们设置全局变量来保存当前的数据状态，然后将数据渲染到页面上，就像这样："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'const renderCartList = () => {\n  const goodsContainer = document.querySelector(\'#container\');\n  goodsContainer.innerHTML = \'\';\n  if (goods.length === 0 && totItems !== 0) {\n    // 如果购物车本页没有商品（通过删除删空的情况或意外情况），应该重新请求数据，初始化购物车\n    initGoods();\n  }\n  else if (totItems === 0) { \n    // 如果购物车没有商品，应该显示空购物车\n    goodsContainer.innerHTML = \'<div class="empty-cart">购物车为空`(*>﹏<*)′</div>\';\n    return;\n  }\n  for (let i = 0; i < goods.length; i++) {\n    const good = goods[i];\n    const cartItem = document.createElement(\'div\');\n    cartItem.classList.add(\'cart-item\');\n    cartItem.setAttribute(\'id\', "item-" + good["id"]);\n    cartItem.innerHTML = `<input type="checkbox" onClick="selectGood(${good["id"]})">\n          <img src="${good["image"]}" alt="">\n          <div class="item-info">\n            <h2>商品名称：${good["name"]}</h2>\n            <div class="info">\n              <div class="desp">\n                商品描述：<span>${good["description"]}</span>\n              </div>\n              <div class="detail">\n                <div class="price">单价：<span><i class="fa-solid fa-yen-sign"></i>\n                  <span>${good["price"].toFixed(2)}</span>\n                </span></div>\n                <div class="price">小计：<span><i class="fa-solid fa-yen-sign"></i>\n                  <span class="tot-price">${(good["price"] * good["quantity"]).toFixed(2)}</span>\n                </span></div>\n                <div class="quantity">\n                  数量：\n                  <span class="count">\n                    <i class="fa-solid fa-circle-minus" onClick="changeQuantity(${good["id"]}, -1)"></i>\n                    <span>${good["quantity"]}</span>\n                    <i class="fa-solid fa-circle-plus" onClick="changeQuantity(${good["id"]}, 1)"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <button class="del-btn" onClick="delItem(${good["id"]})">删除</button>`;\n    goodsContainer.appendChild(cartItem);\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["注意到，在上述代码中，我为每一个",(0,s.jsx)(e.code,{children:"cart-item"}),"添加了一个唯一的",(0,s.jsx)(e.code,{children:"id"}),"属性，这个属性是用于标识每一个商品的，这样我们在之后的操作中可以通过这个",(0,s.jsx)(e.code,{children:"id"}),"属性来找到对应的商品。"]}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition tip "关于唯一标识符" true >}}'}),"\n",(0,s.jsxs)(e.p,{children:["在实际的项目中，我们往往需要为每一个商品添加一个唯一的标识符，这个标识符可以是商品的",(0,s.jsx)(e.code,{children:"id"}),"，也可以是其他的唯一标识符，这样可以更好的操作商品，例如删除商品、修改商品数量等。"]}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition attension "过滤错误数据" true >}}'}),"\n",(0,s.jsx)(e.p,{children:"在实际的项目中，我们往往会遇到一些错误的数据，例如商品数量为负数或者小数、商品价格为负数等，这些数据是不符合实际的，我们需要在获取数据之后对这些数据进行过滤，这样可以保证数据的正确性。"}),"\n",(0,s.jsxs)(e.p,{children:["如果数据量比较大，我们也会选择使用",(0,s.jsx)(e.code,{children:"filter"}),"方法来过滤数据。"]}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsx)(e.p,{children:'{{< admonition bug "图片加载失败时" true >}}'}),"\n",(0,s.jsxs)(e.p,{children:["在实际的项目中，我们往往会遇到一些图片加载失败的情况，这时候我们可以通过",(0,s.jsx)(e.code,{children:"onerror"}),"事件来监听图片加载失败的情况，然后通过一些方法来处理这种情况，例如显示一个默认图片、显示一个提示信息等。"]}),"\n",(0,s.jsx)(e.p,{children:"{{< /admonition >}}"}),"\n",(0,s.jsxs)(e.h3,{id:"改变商品数量",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#改变商品数量",children:"#"}),"改变商品数量"]}),"\n",(0,s.jsxs)(e.p,{children:["修改商品数量是通过点击",(0,s.jsx)(e.code,{children:"+"}),"和",(0,s.jsx)(e.code,{children:"-"}),"按钮来实现的，我们可以通过",(0,s.jsx)(e.code,{children:"onClick"}),"事件来监听这两个按钮的点击事件，然后通过",(0,s.jsx)(e.code,{children:"changeQuantity"}),"函数来改变商品的数量。"]}),"\n",(0,s.jsx)(e.p,{children:"在修改商品数量的时候，我们需要注意一些边界条件，例如商品数量不能为负数，商品数量不能超过库存（本篇的demo没有考虑这个库存上限）等，考虑到加操作和减操作的逻辑是一样的，我们可以通过传入一个参数来判断是加还是减，以减少代码的重复。"}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"changeQuantity"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'const changeQuantity = (id, cnt) => {\n  const item = document.querySelector(\'#item-\' + id);\n  const count = item.querySelector(\'.count span\');\n  const price = item.querySelector(\'.tot-price\');\n  const quantity = parseInt(count.innerHTML);\n  if (quantity + cnt <= 0) {\n    delItem(id);\n    return;\n  }\n  count.innerHTML = quantity + cnt;\n  price.innerHTML = (parseFloat(price.innerHTML) + cnt * goods.find(good => good["id"] === id)["price"]).toFixed(2);\n  // 这里应该发送请求修改数据，这里只是模拟，直接修改\n  goods = goods.map(good => {\n    if (good["id"] === id) {\n      good["quantity"] = quantity + cnt;\n    }\n    return good;\n  });\n  if (curSelectGoods.find(good => good["id"] === id)) {\n    selectTotal += cnt;\n    curSelectGoods = curSelectGoods.map(good => {\n      if (good["id"] === id) {\n        good["price"] = parseFloat(price.innerHTML);\n      }\n      return good;\n    });\n    updateTotalCount(); // 更新总价\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"删除商品",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#删除商品",children:"#"}),"删除商品"]}),"\n",(0,s.jsxs)(e.p,{children:["删除商品是通过点击删除按钮来实现的，我们可以通过",(0,s.jsx)(e.code,{children:"onClick"}),"事件来监听删除按钮的点击事件，然后通过",(0,s.jsx)(e.code,{children:"delItem"}),"函数来删除商品。"]}),"\n",(0,s.jsx)(e.p,{children:"在删除商品的时候，我们需要注意一些边界条件，例如删除商品后本页购物车为空，或者删除商品后购物车的商品数量减少等。"}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"delItem"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'const delItem = (id) => {\n  const item = document.querySelector(\'#item-\' + id);\n  item.remove();\n  // 这里应该发送请求删除数据，这里只是模拟，直接删除\n  goods = goods.filter(good => good["id"] !== id);\n  renderCartList();\n  if (curSelectGoods.find(good => good["id"] === id)) {\n    selectTotal -= parseInt(item.querySelector(\'.count span\').innerHTML);\n    curSelectGoods = curSelectGoods.filter(good => good["id"] !== id);\n    updateTotalCount();\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"选中商品",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#选中商品",children:"#"}),"选中商品"]}),"\n",(0,s.jsx)(e.p,{children:"选中商品可以分为两种情况：全选和单选。全选的状态会影响到单选的状态，单选的状态也会影响到全选的状态，在考虑全选和单选的逻辑的时候，我们需要多角度考虑。"}),"\n",(0,s.jsxs)(e.p,{children:["在对单个商品进行选中的时候，我们可以通过",(0,s.jsx)(e.code,{children:"onClick"}),"事件来监听单选按钮的点击事件，然后通过",(0,s.jsx)(e.code,{children:"selectGood"}),"函数来选中商品，选中商品时，我们要考虑的有：选中商品的总价、选中商品的数量、全选按钮的状态等。"]}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"selectGood"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const selectGood = (id) => {\n  const item = document.querySelector('#item-' + id);\n  const checkbox = item.querySelector('input[type=\"checkbox\"]');\n  const price = item.querySelector('.tot-price');\n  const quantity = item.querySelector('.count span');\n  if(checkbox.checked) {\n    selectTotal += parseInt(quantity.innerHTML);\n    curSelectGoods.push({ id: id, price: parseFloat(price.innerHTML) });\n    updateTotalCount();\n  } else {\n    selectTotal -= parseInt(quantity.innerHTML);\n    curSelectGoods = curSelectGoods.filter(good => good[\"id\"] !== id);\n    updateTotalCount();\n  }\n  if(curSelectGoods.length === goods.length) {\n    selectAllStatus = true;\n    const selectAll = document.querySelector('#select-all');\n    const icon = selectAll.querySelector('i');\n    icon.classList.remove('fa-regular');\n    icon.classList.add('fa-solid');\n  }\n  else {\n    selectAllStatus = false;\n    const selectAll = document.querySelector('#select-all');\n    const icon = selectAll.querySelector('i');\n    icon.classList.remove('fa-solid');\n    icon.classList.add('fa-regular');\n  }\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["在全选的时候，我们可以通过通过",(0,s.jsx)(e.code,{children:"selectAll"}),"函数来全选商品，全选商品时，我们要考虑的有：选中商品的总价、选中商品的数量、单选按钮的状态等。"]}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"selectAll"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const setSelectAll = () => {\n  const selectAll = document.querySelector('#select-all');\n  selectAll.addEventListener('click', () => {\n    const items = document.querySelectorAll('.cart-item');\n    if (!selectAllStatus) {\n      selectTotal = 0;\n      curSelectGoods = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        item.querySelector('input[type=\"checkbox\"]').checked = true;\n        selectTotal += parseInt(item.querySelector('.count span').innerHTML);\n        curSelectGoods.push({ id: parseInt(item.getAttribute('id').split('-')[1]), price: parseFloat(item.querySelector('.tot-price').innerHTML) });\n      }\n      const icon = selectAll.querySelector('i');\n      icon.classList.remove('fa-regular');\n      icon.classList.add('fa-solid');\n    }\n    else {\n      for (let i = 0; i < items.length; i++) {\n        items[i].querySelector('input[type=\"checkbox\"]').checked = false;\n      }\n      selectTotal = 0;\n      curSelectGoods = [];\n      const icon = selectAll.querySelector('i');\n      icon.classList.remove('fa-solid');\n      icon.classList.add('fa-regular');\n    }\n    updateTotalCount();\n    selectAllStatus = !selectAllStatus;\n  });\n}\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"更新总价",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#更新总价",children:"#"}),"更新总价"]}),"\n",(0,s.jsxs)(e.p,{children:["我们在结算的时候需要计算当前选中的商品的总价，这个总价依赖于选中的商品数量和价格，我们可以通过",(0,s.jsx)(e.code,{children:"updateTotalCount"}),"函数来更新总价，并在需要的时候调用这个函数。"]}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"updateTotalCount"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const updateTotalCount = () => {\n  const curSelectBox = document.querySelector('#cur-select');\n  if (selectTotal) {\n    curSelectBox.innerHTML = selectTotal;\n  }\n  else {\n    curSelectBox.innerHTML = 0;\n  }\n  const totPriceBox = document.querySelector('#sum');\n  if (curSelectGoods.length) {\n    totPriceBox.innerHTML = curSelectGoods.reduce((acc, cur) => acc + cur[\"price\"], 0).toFixed(2);\n  }\n  else {\n    totPriceBox.innerHTML = 0;\n  }\n}\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"分页设计",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#分页设计",children:"#"}),"分页设计"]}),"\n",(0,s.jsxs)(e.p,{children:["分页是通过点击页码来切换商品列表的，我们可以通过",(0,s.jsx)(e.code,{children:"onClick"}),"事件来监听页码的点击事件，然后通过",(0,s.jsx)(e.code,{children:"changePage"}),"函数来切换商品列表。"]}),"\n",(0,s.jsx)(e.p,{children:"标准的分页设计中，每次点击页码时，我们都会重新请求数据，然后重新渲染页面，这样可以保证数据的实时性，这里我只是模拟了这个过程，实际的项目中，我们会通过后端来获取数据。"}),"\n",(0,s.jsx)(e.p,{children:"由于总页数是不确定的，所以我们依然是通过全局变量来保存当前的页码和总页数，并且在切换页码的时候，我们需要考虑一些边界条件，例如页码不能为负数，页码不能超过总页数等。"}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"initPagnation"}),"和",(0,s.jsx)(e.code,{children:"changePagnation"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const changePage = (e) => {\n  changePagnation(e.target.innerHTML);\n  // 按照正常的分页逻辑，这里应该重新请求数据，这里只是模拟，所以直接取数据\n  changeCartList();\n}\n\nconst initPagnation = () => {\n  const pagination = document.querySelector('#pagination');\n  pagination.innerHTML = '';\n  for (let i = 0; i <= totPages + 1; i++) {\n    if (i === 0) {\n      const prev = document.createElement('i');\n      prev.classList.add('fa-solid', 'fa-chevron-left', 'page-prev');\n      if (curPage === 1) {\n        prev.disabled = true;\n      }\n      prev.addEventListener('click', () => {\n        if (curPage > 1) {\n          changePagnation(curPage - 1);\n        }\n      });\n      pagination.appendChild(prev);\n      continue;\n    }\n    else if (i === totPages + 1) {\n      const next = document.createElement('i');\n      next.classList.add('fa-solid', 'fa-chevron-right', 'page-next');\n      if (curPage === totPages) {\n        next.disabled = true;\n      }\n      next.addEventListener('click', () => {\n        if (curPage < totPages) {\n          changePagnation(curPage + 1);\n        }\n      });\n      pagination.appendChild(next);\n      continue;\n    }\n    const page = document.createElement('div');\n    page.innerHTML = i;\n    page.classList.add('page');\n    if (i === curPage) {\n      page.classList.add('active-page');\n    }\n    page.addEventListener('click', changePage);\n    pagination.appendChild(page);\n  }\n}\n\nconst changePagnation = (pageNo) => {\n  const page = document.querySelector('.active-page');\n  page.classList.remove('active-page');\n  const pageArr = document.querySelectorAll('.page');\n  curPage = parseInt(pageNo);\n  pageArr[curPage - 1].classList.add('active-page');\n  changeCartList();\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["我这里的分页设计的比较简单，一共只根据json数据设计了5页，在实际项目中，分页的数目是不确定，而且有可能非常多，在设计分页功能的时候，最好的方法是增加一个",(0,s.jsx)(e.code,{children:"..."}),"按钮，点击这个按钮可以展开更多的页码，以及增加一个",(0,s.jsx)(e.code,{children:"跳转"}),"按钮，可以跳转到指定的页码，方便用户查找。"]}),"\n",(0,s.jsxs)(e.h3,{id:"结算",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#结算",children:"#"}),"结算"]}),"\n",(0,s.jsx)(e.p,{children:"结算逻辑比较简单，依然是考虑为空等边界条件。"}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"setPay"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const setPay = () => {\n  const payBtn = document.querySelector('#pay');\n  payBtn.addEventListener('click', () => {\n    if (curSelectGoods.length === 0) {\n      alert('请选择商品后结算');\n      return;\n    }\n    // 这里应该发送请求支付，这里只是模拟，直接删除\n    goods = goods.filter(good => !curSelectGoods.find(select => select[\"id\"] === good[\"id\"]));\n    curSelectGoods = [];\n    selectTotal = 0;\n    updateTotalCount();\n    if (goods.length === 0) {\n      initGoods();\n    }\n    else {\n      renderCartList();\n    }\n    alert('支付成功');\n  });\n}\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"消息提示框",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#消息提示框",children:"#"}),"消息提示框"]}),"\n",(0,s.jsx)(e.p,{children:"在删除商品、结算商品等行为后，我们可以通过一个弹出提示框来与用户进行确认交互，并且可以自定义消息弹出框的类型，这样可以提高用户体验。"}),"\n",(0,s.jsxs)(e.p,{children:["以下是我的",(0,s.jsx)(e.code,{children:"alert"}),"函数："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const alert = (msg, type) => {\n  const alertBox = document.createElement('div');\n  alertBox.classList.add('alert-box');\n  alertBox.innerHTML = msg;\n  if (type === 'success') {\n    alertBox.classList.add('alert-success');\n  }\n  else if (type === 'error') {\n    alertBox.classList.add('alert-error');\n  }\n  document.body.appendChild(alertBox);\n  setTimeout(() => {\n    alertBox.style.display = 'none';\n  }, 2000);\n}\n\n{/* 结合上面的支付函数就可以写成下面这样 */}\nconst setPay = () => {\n  const payBtn = document.querySelector('#pay');\n  payBtn.addEventListener('click', () => {\n    if (curSelectGoods.length === 0) {\n      alert('请选择商品后结算', 'error');\n      return;\n    }\n    // 这里应该发送请求支付，这里只是模拟，直接删除\n    goods = goods.filter(good => !curSelectGoods.find(select => select[\"id\"] === good[\"id\"]));\n    curSelectGoods = [];\n    selectTotal = 0;\n    updateTotalCount();\n    if (goods.length === 0) {\n      initGoods();\n    }\n    else {\n      renderCartList();\n    }\n    alert('支付成功', 'success');\n  });\n}\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"查找功能",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#查找功能",children:"#"}),"查找功能"]}),"\n",(0,s.jsx)(e.p,{children:"在本项目中，一页只有6个商品，感觉查找功能不是很必要，不过假如在一些项目中，一页有很多商品，比如不是基于分页获取数据，而是一次性获取所有数据或者是利用瀑布流加载数据，这时候查找功能就显得很重要了。"}),"\n",(0,s.jsx)(e.p,{children:"查找功能的实现其实就是一个filter，我们设计一个简单的搜索功能："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"const setSearch = () => {\n  // 回车搜索\n  const searchInput = document.querySelector('#search-input');\n  searchInput.addEventListener('keydown', (e) => {\n    if (e.keyCode === 13) {\n      search();\n    }\n  });\n}\n\nconst search = () => {\n  const searchInput = document.querySelector('#search-input');\n  const keyword = searchInput.value;\n  fetch('cart.json')\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      goods = data.pages[curPage - 1][\"items\"].filter(good => good[\"name\"].includes(keyword));\n      renderCartList();\n    }\n  );\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"搜索框的设计"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:'<div class="search-bar">\n  <input type="text" placeholder="Search" id="search-input">\n</div>\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:".search-bar {\n    height: 40px;\n    display: flex;\n    width: 100%;\n    max-width: 400px;\n    padding-left: 16px;\n\n    input {\n        width: 100%;\n        height: 100%;\n        border: none;\n        outline: none;\n        background-color: var(--search-bg);\n        border-radius: 4px;\n        font-family: var(--body-font);\n        font-size: 15px;\n        font-weight: 500;\n\n        &::placeholder {\n            font-family: var(--body-font);\n            color: var(--inactive-color);\n            font-size: 15px;\n            font-weight: 500;\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"这样我们就可以通过输入关键字来查找商品了。"}),"\n",(0,s.jsxs)(e.h2,{id:"仓库地址",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#仓库地址",children:"#"}),"仓库地址"]}),"\n",(0,s.jsxs)(e.p,{children:['这个项目的源码我已经上传到我的gitee上，大家可以自行下载，地址在这里：{{<link "',(0,s.jsx)(e.a,{href:"https://gitee.com/florae00/bluemsun2024%22%3E%7D%7D%E3%80%82",rel:"noopener noreferrer",target:"_blank",children:'https://gitee.com/florae00/bluemsun2024">}}。'})]})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(r,n)})):r(n)}let a=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["posts%2Ffront_end%2Fcart_page_sample.md"]={toc:[{id:"整体布局",text:"整体布局",depth:2},{id:"购物车列表设计",text:"购物车列表设计",depth:3},{id:"css解释",text:"CSS解释",depth:4},{id:"图标库",text:"图标库",depth:4},{id:"在线工具推荐",text:"在线工具推荐",depth:4},{id:"js逻辑",text:"JS逻辑",depth:2},{id:"数据获取与渲染",text:"数据获取与渲染",depth:3},{id:"改变商品数量",text:"改变商品数量",depth:3},{id:"删除商品",text:"删除商品",depth:3},{id:"选中商品",text:"选中商品",depth:3},{id:"更新总价",text:"更新总价",depth:3},{id:"分页设计",text:"分页设计",depth:3},{id:"结算",text:"结算",depth:3},{id:"消息提示框",text:"消息提示框",depth:2},{id:"查找功能",text:"查找功能",depth:2},{id:"仓库地址",text:"仓库地址",depth:2}],title:"购物车页面制作教程（包含分页设计）",headingTitle:"需求分析",frontmatter:{title:"购物车页面制作教程（包含分页设计）",subtitle:"",date:"2024-07-06T11:16:27.000Z",lastmod:"2024-07-06T11:16:27.000Z",draft:!1,authors:null,description:"一篇用于从零开始，基于原生H5C3JS制作的购物车页面",tags:["前端"],categories:["在前端搬砖的日子里"],series:null,hiddenFromHomePage:!1,hiddenFromSearch:!1,featuredImage:"https://img.dodolalorc.cn/i/2025/03/03/67c558f57d10e.png",featuredImagePreview:"https://img.dodolalorc.cn/i/2025/03/03/67c558f57d10e.png",toc:{enable:!0},math:{enable:!1},lightgallery:!1,license:""}}},5523:function(n,e,i){i.d(e,{Z:()=>a});var s=i(2676),t=i(5271),c=i(2815);i(7995);let r={"zh-CN":n=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${n.minutes>=1?`${Math.ceil(n.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":n=>`Estimated reading time: ${n.minutes>=1?`${Math.ceil(n.minutes)} minutes`:"less than 1 minute"}`};function d(n,e,i){let s=Object.keys(r).includes(e)?e:i;return r[s](n)}let a=n=>{let{defaultLocale:e="en-US"}=n,i=(0,c.Vi)().page.readingTimeData,r=(0,c.Jr)(),a=(0,c.e7)(),[l,o]=(0,t.useState)(d(i,r,e));return(0,t.useEffect)(()=>{o(d(i,r,e))},[r,i]),(0,s.jsx)("span",{"data-dark":String(a),className:"rp-reading-time",children:l})}}}]);